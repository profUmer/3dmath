<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sec-matrix-code-start" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Starting a 4D matrix class</title>

<listing xml:id="listing-matrix-code-start">
<caption>A bare-bones 4x4 matrix class</caption>
<program language="cpp">
<code>
class Matrix4 {
	/// Let's just make sure that all is clear about how this matrix is layed out. 

	/// How a matrix is really layed out is pretty much abitrary but we need to agree
	/// and the world has agreed (except for Microsoft) on the right-hand rule. 
	/// First, the 4x4 matrix is really just an array of 16 numbers.  
	/// We need to think of the array as a matrix in the following way
	/// 4x4 matrix - COLUMN MAJOR - The OpenGL, science, physics, mathematics and engineering way. 
	///	0  4  8  12        [0][0]  [1][0]  [2][0]  [3][0]   
	///	1  5  9  13  (or)  [0][1]  [1][1]  [2][1]  [3][1]
	///	2  6  10 14        [0][2]  [1][2]  [2][2]  [3][2]
	///	3  7  11 15        [0][3]  [1][3]  [2][3]  [3][3]
private:
	float  m[16];
};
</code>
</program>
</listing>
</section>